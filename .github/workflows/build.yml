name: Build Wheels
on:
  push:
    branches:
      - main
  pull_request:
jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.11", "3.12"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up Rust (Ensure Cargo is Installed)
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      - name: Initialize Rust
        if: runner.os != 'Windows'
        run: |
          source $HOME/.cargo/env
      - name: Initialize Rust (Windows)
        if: runner.os == 'Windows'
        run: |
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install maturin cibuildwheel
      - name: Build wheels with cibuildwheel
        run: |
          cibuildwheel --output-dir dist
        env:
          CIBW_SKIP: "cp36-* pp36-*"
          CIBW_BUILD: "cp37-* cp38-* cp39-* cp310-* cp311-* cp312-*"
          CIBW_ARCHS: auto
          CIBW_ENVIRONMENT: 'PATH="$HOME/.cargo/bin:$PATH"'
          CIBW_BEFORE_BUILD: pip install -U setuptools wheel setuptools-rust
          CIBW_BUILD_FRONTEND: "build"
      - name: Upload wheels as artifact
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-py${{ matrix.python-version }}
          path: dist/*.whl
